{"version":3,"file":"static/js/742.e1b91c36.chunk.js","mappings":"6JAEaA,E,OAAgBC,GAAAA,IAAH,mH,SCAX,SAASC,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAChC,OAAO,SAACH,EAAD,UAAgBG,GACxB,C,iKCAM,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,iFACQC,EAAAA,EAAAA,IAAA,SAAoB,CAAED,OAAAA,IAD9B,0GAFPC,EAAAA,EAAAA,SAAAA,QAAyB,8C,gECCZC,EAAYN,EAAAA,GAAAA,GAAH,mNAaTO,EAAkBP,EAAAA,GAAAA,IAAH,uIAQfQ,EAAoBR,EAAAA,GAAAA,IAAH,0FAMjBS,EAAgBT,EAAAA,GAAAA,IAAH,8HAQbU,EAAqBV,EAAAA,GAAAA,GAAH,iIAQlBW,GAAUX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,0dA2BPa,EAAcb,EAAAA,GAAAA,OAAH,ieA4BXc,EAAgBd,EAAAA,GAAAA,MAAH,2ZAsBbe,EAAef,EAAAA,GAAAA,OAAH,sQ,gECxHZgB,EAAiBhB,EAAAA,GAAAA,IAAH,yFAGDiB,GAGbC,EAAelB,EAAAA,GAAAA,IAAH,4EAMZmB,EAAYnB,EAAAA,GAAAA,IAAH,+CAIToB,EAAcpB,EAAAA,GAAAA,IAAH,waAqBXqB,EAAarB,EAAAA,GAAAA,IAAH,kRAWVsB,EAAgBtB,EAAAA,GAAAA,IAAH,+XAkBbuB,GAAcvB,EAAAA,GAAAA,IAAH,wGAOXwB,GAAkBxB,EAAAA,GAAAA,IAAH,gNAYfyB,GAAezB,EAAAA,GAAAA,KAAH,gDAIZ0B,GAAe1B,EAAAA,GAAAA,KAAH,gDAIZ2B,GAAY3B,EAAAA,GAAAA,KAAH,gDAIT4B,GAAY5B,EAAAA,GAAAA,OAAH,yTAYA,SAAA6B,GAAK,OACvBA,EAAM,oBAAsB,UAAY,SADjB,I,UChGZ,SAASC,GAAT,GAQX,IAPFC,EAOC,EAPDA,KACAC,EAMC,EANDA,GACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,aACAC,EACC,EADDA,YAEMC,EAAeL,EAAOM,eAAe,SAGrCC,IADkBH,EAAc,EAAI,GAAKH,GACRK,eAAe,SAEtD,OACE,WAACnB,EAAD,YACE,UAACC,EAAD,KACA,UAACC,EAAD,WACE,UAACC,GAAD,WACE,UAACJ,EAAD,CAAWsB,IAAKN,EAAQO,MAAM,KAAKC,OAAO,KAAKC,IAAI,cAGvD,UAAC1B,EAAD,WACE,iBAAKuB,I,i/BAAeG,IAAI,OAAOF,MAAM,KAAKC,OAAO,UAEnD,UAAC3B,EAAD,KACA,WAACQ,GAAD,YACE,UAACC,GAAD,WACE,6BAASM,OAEX,WAACL,GAAD,WAAeY,EAAa,cAC5B,WAACX,GAAD,WAAYa,EAAgB,iBAC5B,UAACZ,GAAD,CACEiB,KAAK,SACL,iBAAgBR,EAChBS,QAAS,kBAAMV,EAAaJ,EAAnB,EAHX,SAKGK,EAAc,YAAc,gBAKtC,CCxCc,SAASU,KACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,EAAGC,MAAO,IAAvD,eAAOjD,EAAP,KAAekD,EAAf,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,YAArC,eAAOM,EAAP,KAAeC,EAAf,KACA,GAA0CP,EAAAA,EAAAA,WAAS,GAAnD,eAAOQ,EAAP,KAAsBC,EAAtB,KACMC,GAAiBC,EAAAA,EAAAA,QAAO,MAC9B,GAA4CX,EAAAA,EAAAA,WAAS,WACnD,IAAMY,EAAgBC,KAAKC,MAAMC,aAAaC,QAAb,mBACjC,OAAOJ,GAAgC,CAAC,CACzC,IAHD,eAAOK,EAAP,KAAuBC,EAAvB,MAKAC,EAAAA,EAAAA,YAAU,WACRpB,EAAgB,CAAEE,KAAM,EAAGC,MAAOjD,EAAOiD,SACzC,iBAAC,+GAE0BlD,EAASC,GAFnC,OAESmE,EAFT,OAGSC,EAAeD,EAASE,KAC9BjB,GAAY,OAAIgB,IAJnB,gDAMGE,QAAQC,IAAI,QAAZ,MANH,wDAAD,EASD,GAAE,CAAC1B,EAAcC,EAAiB9C,KAEnCkE,EAAAA,EAAAA,YAAU,WACRT,EAAee,QAAQC,eAAe,CAAEC,SAAU,UACnD,GAAE,CAACvB,KAEJe,EAAAA,EAAAA,YAAU,WACHX,GACHoB,YAAW,kBAAMnB,GAAiB,EAAvB,GAA8B,IAE5C,GAAE,CAACD,IAEJ,IAIMqB,EAAkB,SAAAhD,GACtBqC,GAAkB,SAAAY,GAAS,yBAEpBA,GAFoB,cAGtBjD,GAAKiD,EAAUjD,KAAOiD,EAAUjD,IAHV,GAM5B,EAeKkD,EAbmB,WACvB,OAAQzB,GACN,IAAK,aACH,OAAOF,EAASE,QAAO,SAAA0B,GAAO,OAAmC,IAA/Bf,EAAee,EAAQnD,GAA3B,IAEhC,IAAK,SACH,OAAOuB,EAASE,QAAO,SAAA0B,GAAO,OAAmC,IAA/Bf,EAAee,EAAQnD,GAA3B,IAEhC,QACE,OAAOuB,EAEZ,CAEwB6B,GAWzB,OAFAlB,aAAamB,QAAb,iBAAuCrB,KAAKsB,UAAUlB,KAGpD,WAAC7D,EAAD,YACE,WAACE,EAAD,YACE,UAACE,EAAD,CAAS4E,GAAG,IAAZ,SAAgB,UAGhB,UAACzE,EAAD,WACE,WAACC,EAAD,CAAcyE,KAAK,WAAWC,SA5CjB,SAAAC,GACnBhC,EAAUgC,EAAMC,OAAOC,MACxB,EA0CO,WACI,oBAAQA,MAAM,WAAd,SAAyB,gBACzB,oBAAQA,MAAM,SAAd,SAAuB,cACvB,oBAAQA,MAAM,aAAd,SAA2B,yBAKN,IAA5BV,EAAiBW,QAAgBlC,GAChC,UAACjD,EAAD,UAAoB,0EAIpB,mCACE,UAACF,EAAD,WACE,UAACF,EAAD,UACG4E,EAAiBY,KAAI,SAAAX,GACpB,IAAQnD,EAAwCmD,EAAxCnD,GAAID,EAAoCoD,EAApCpD,KAAME,EAA8BkD,EAA9BlD,OAAQC,EAAsBiD,EAAtBjD,UAAWC,EAAWgD,EAAXhD,OAC/B4D,IAAY3B,EAAepC,IAC/BoC,EAAepC,GACjB,OACE,UAACF,GAAD,CAEEE,GAAIA,EACJD,KAAMA,EACNE,OAAQA,EACRC,UAAWA,EACXC,OAAQA,EACRC,aAAc4C,EACd3C,YAAa0D,GAPR/D,EAUV,SAGL,UAACnB,EAAD,CACEgC,KAAK,UACLmD,IAAKnC,EACLf,QAtDS,WACjBQ,GAAU,SAAA2B,GAAS,OAAIA,EAAU5B,MAAQ,IAAlB,kBACZ4B,GADY,IACD5B,MAAO4B,EAAU5B,MAAQ,IACzC4B,CAFa,GAIpB,EA8CO,SAIC,sBAOV,C,kCC1Ic,SAASgB,KACtB,OACE,UAAC,KAAD,WACE,UAAChG,GAAA,EAAD,WACE,UAACiG,GAAA,EAAD,WACE,UAAC,GAAD,SAKT,C,qECZYC,E,OAAcnG,GAAAA,IAAH,uG","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","services/api.js","components/TweetersList/TweetersList.styled.jsx","components/TweeterCard/TweeterCard.styled.jsx","components/TweeterCard/TweeterCard.jsx","components/TweetersList/TweetersList.jsx","pages/Tweets.jsx","pages/pages.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.div`\n  padding: 10px 0;\n\n  @media screen and (min-width: 480px) {\n    padding: 20px 0;\n  }\n`;","import { StyledSection } from './Section.styled';\n\nexport default function Section({ children }) {\n  return <StyledSection>{children}</StyledSection>;\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://63ffa9a89f8449102982c6ee.mockapi.io';\n\nexport async function getCards(params) {\n  return await axios.get(`/users`, { params });\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CardsList = styled.ul`\n  list-style: none;\n\n  display: flex;\n  gap: 35px;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  @media screen and (min-width: 1280px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const CardListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CardListContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n`;\n\nexport const MenuContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  width: 100%;\n  gap: 50px;\n`;\n\nexport const EmptyFilterMessage = styled.h4`\n  text-align: center;\n  font-size: 30px;\n  line-height: 45px;\n  font-weight: 600;\n  color: #5CD3A8;\n`;\n\nexport const BackBtn = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 180px;\n  height: 50px;\n  border-radius: 15px;\n  \n  font-weight: 600;\n  font-size: 22px;\n  line-height: 28px;\n  color: #ebd8ff;\n  text-decoration: none;\n\n  background-color: #5736a3;\n  box-shadow:-2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #5736a3;\n    background-color:#5CD3A8;\n    }\n  }\n`;\n\nexport const LoadMoreBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 180px;\n  height: 50px;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  font-weight: 600;\n  font-size: 22px;\n  line-height: 28px;\n  color: #ebd8ff;\n\n  background-color: #5736a3;\n  box-shadow:-2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #5736a3;\n    background-color:#5CD3A8;\n    }\n  }\n`;\n\nexport const DropdownLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n\n  width: 180px;\n  height: 50px;\n  border-radius: 15px;\n  outline: none;\n\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 28px;\n  text-align: center;\n  color: #ebd8ff;\n\n  background-color: #5736a3;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n`;\n\nexport const StyledSelect = styled.select`\n  padding-left: 5px;\n  border-radius: 8px;\n\n  font-size: 20px;\n  line-height: 28px;\n  font-weight: 600;\n  color: #5736a3;\n\n  background-color: #ebd8ff;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    color:#5CD3A8;\n    }\n  }\n`;","import styled from 'styled-components';\nimport cardBackgroundImg from 'images/cardBackgroundImg.png';\n\nexport const CardBackground = styled.div`\n  height: 168px;\n  width: 308px;\n  background-image: url(${cardBackgroundImg});\n`;\n\nexport const GoitLogotype = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const StyledImg = styled.img`\n  border-radius: 50%;\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  flex-basis: 380px;\n  height: 480px;\n  padding: 28px 36px;\n  border-radius: 20px;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n`;\n\nexport const MiddleLine = styled.div`\n  position: absolute;\n  left: 0;\n  top: 214px; \n  height: 8px;\n  width: 100%;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const AvatarOutLine = styled.div`\n  position: absolute;\n  left: 150px;\n  top: 178px;\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  `;\n\nexport const AvatarThumb = styled.div`\n  width: 62px;\n  height: 62px;\n  background: #5736a3;\n  border-radius: 50%;\n`;\n\nexport const CardInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  font-size: 20px;\n  line-height: 1.2;\n  font-style: normal;\n  color: #ebd8ff;\n  text-transform: uppercase;\n`;\n\nexport const TweetersName = styled.span`\n  margin-bottom: 16px;\n`;\n\nexport const TweetsNumber = styled.span`\n  margin-bottom: 16px;\n`;\n\nexport const Followers = styled.span`\n  margin-bottom: 26px;\n`;\n\nexport const FollowBtn = styled.button`\n  width: 196px;\n  height: 50px;\n  border-radius: 10px;\n  border: none;\n  outline: none;\n\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 22px;\n  color: #373737;\n\n  background-color: ${props =>\n    props[`data-isFollowing`] ? '#5CD3A8' : '#ebd8ff'};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  \n  cursor: pointer;\n`;","import logotype from 'images/goitLogotype.png';\nimport {\n  CardWrapper,\n  MiddleLine,\n  AvatarOutLine,\n  AvatarThumb,\n  CardBackground,\n  GoitLogotype,\n  CardInfoWrapper,\n  TweetersName,\n  TweetsNumber,\n  Followers,\n  FollowBtn,\n  StyledImg,\n} from './TweeterCard.styled';\n\nexport default function TweeterCard({\n  user,\n  id,\n  tweets,\n  followers,\n  avatar,\n  setFollowing,\n  isFollowing,\n}) {\n  const tweetsNumber = tweets.toLocaleString('en-EN');\n\n  const onFollowNumber = (isFollowing ? 1 : 0) + followers;\n  const followersNumber = onFollowNumber.toLocaleString('en-EN');\n\n  return (\n    <CardWrapper>\n      <MiddleLine />\n      <AvatarOutLine>\n        <AvatarThumb>\n          <StyledImg src={avatar} width=\"62\" height=\"62\" alt=\"user\" />\n        </AvatarThumb>\n      </AvatarOutLine>\n      <GoitLogotype>\n        <img src={logotype} alt=\"logo\" width=\"76\" height=\"22\"/>\n      </GoitLogotype>\n      <CardBackground />\n      <CardInfoWrapper>\n        <TweetersName>\n          <strong>{user}</strong>\n        </TweetersName>\n        <TweetsNumber>{tweetsNumber} Tweets</TweetsNumber>\n        <Followers>{followersNumber} Followers</Followers>\n        <FollowBtn\n          type=\"button\"\n          data-following={isFollowing}\n          onClick={() => setFollowing(id)}\n        >\n          {isFollowing ? 'Following' : 'Follow'}\n        </FollowBtn>\n      </CardInfoWrapper>\n    </CardWrapper>\n  );\n}","import { useState, useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getCards } from 'services/api';\n\nimport {\n  CardListContainer,\n  CardsList,\n  CardListWrapper,\n  MenuContainer,\n  BackBtn,\n  LoadMoreBtn,\n  DropdownLabel,\n  EmptyFilterMessage,\n  StyledSelect,\n} from './TweetersList.styled';\nimport TweeterCard from 'components/TweeterCard/TweeterCard';\n\nexport default function TweetsList() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [params, setParams] = useState({ page: 1, limit: 3 });\n  const [tweeters, setTweeters] = useState([]);\n  const [filter, setFilter] = useState('show all');\n  const [noMatchFilter, setNoMatchFilter] = useState(false);\n  const loadMoreBtnRef = useRef(null);\n  const [followTweeters, setFollowTweeters] = useState(() => {\n    const savedTweeters = JSON.parse(localStorage.getItem(`followTweeters`));\n    return savedTweeters ? savedTweeters : {};\n  });\n\n  useEffect(() => {\n    setSearchParams({ page: 1, limit: params.limit });\n    (async () => {\n      try {\n        const response = await getCards(params);\n        const tweetersList = response.data;\n        setTweeters([...tweetersList]);\n      } catch (error) {\n        console.log('error', error);\n      }\n    })();\n  }, [searchParams, setSearchParams, params]);\n\n  useEffect(() => {\n    loadMoreBtnRef.current.scrollIntoView({ behavior: 'smooth' });\n  }, [tweeters]);\n\n  useEffect(() => {\n    if (!noMatchFilter) {\n      setTimeout(() => setNoMatchFilter(true), 1000);\n    }\n  }, [noMatchFilter]);\n\n  const handleChange = event => {\n    setFilter(event.target.value);\n  };\n\n  const handleFollowing = id => {\n    setFollowTweeters(prevState => (\n      { \n        ...prevState,\n        [id]: prevState[id] ? !prevState[id] : true,\n      }\n    ));\n  };\n\n  const getFilteredCards = () => {\n    switch (filter) {\n      case 'followings':\n        return tweeters.filter(tweeter => followTweeters[tweeter.id] === true);\n      \n      case 'follow':\n        return tweeters.filter(tweeter => followTweeters[tweeter.id] !== true);\n    \n      default:\n        return tweeters;\n    }\n  };\n\n  const filteredCardList = getFilteredCards();\n\n  const onLoadMore = () => {\n    setParams(prevState => prevState.limit < 10\n        ? { ...prevState, limit: prevState.limit + 3 }\n        : prevState\n    );\n  };\n\n  localStorage.setItem(`followTweeters`, JSON.stringify(followTweeters));\n\n  return (\n    <CardListWrapper>\n      <MenuContainer>\n        <BackBtn to=\"/\">\n          Back\n        </BackBtn>\n        <DropdownLabel>\n          <StyledSelect name=\"tweeters\" onChange={handleChange}>\n              <option value=\"show all\"> show all </option>\n              <option value=\"follow\"> follow </option>\n              <option value=\"followings\"> followings </option>\n          </StyledSelect>\n        </DropdownLabel>\n      </MenuContainer>\n\n      {filteredCardList.length === 0 && noMatchFilter ? (\n        <EmptyFilterMessage>\n          Oops... We can not find any Tweeter by this filter. Try another one!\n        </EmptyFilterMessage>\n      ) : (\n        <>\n          <CardListContainer>\n            <CardsList>\n              {filteredCardList.map(tweeter => {\n                const { id, user, tweets, followers, avatar } = tweeter;\n                const following = followTweeters[id] \n                ? followTweeters[id] : false;\n                return (\n                  <TweeterCard\n                    key={id}\n                    id={id}\n                    user={user}\n                    tweets={tweets}\n                    followers={followers}\n                    avatar={avatar}\n                    setFollowing={handleFollowing}\n                    isFollowing={following}\n                  />\n                );\n              })}\n            </CardsList>\n          </CardListContainer>\n          <LoadMoreBtn\n            type=\"buttons\"\n            ref={loadMoreBtnRef}\n            onClick={onLoadMore}\n          >\n            Load more...\n          </LoadMoreBtn>\n      </>\n      )}\n    </CardListWrapper>\n  );\n}","import TweetersList from 'components/TweetersList/TweetersList';\nimport Container from 'components/Container/Container';\nimport Section from 'components/Section/Section';\nimport { PageWrapper } from './pages.styled';\n\nexport default function Tweets() {\n  return (\n    <PageWrapper>\n      <Section>\n        <Container>\n          <TweetersList />\n        </Container>\n      </Section>\n    </PageWrapper>\n  );\n}","import styled from 'styled-components';\n\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;"],"names":["StyledSection","styled","Section","children","getCards","params","axios","CardsList","CardListWrapper","CardListContainer","MenuContainer","EmptyFilterMessage","BackBtn","Link","LoadMoreBtn","DropdownLabel","StyledSelect","CardBackground","cardBackgroundImg","GoitLogotype","StyledImg","CardWrapper","MiddleLine","AvatarOutLine","AvatarThumb","CardInfoWrapper","TweetersName","TweetsNumber","Followers","FollowBtn","props","TweeterCard","user","id","tweets","followers","avatar","setFollowing","isFollowing","tweetsNumber","toLocaleString","followersNumber","src","width","height","alt","type","onClick","TweetsList","useSearchParams","searchParams","setSearchParams","useState","page","limit","setParams","tweeters","setTweeters","filter","setFilter","noMatchFilter","setNoMatchFilter","loadMoreBtnRef","useRef","savedTweeters","JSON","parse","localStorage","getItem","followTweeters","setFollowTweeters","useEffect","response","tweetersList","data","console","log","current","scrollIntoView","behavior","setTimeout","handleFollowing","prevState","filteredCardList","tweeter","getFilteredCards","setItem","stringify","to","name","onChange","event","target","value","length","map","following","ref","Tweets","Container","PageWrapper"],"sourceRoot":""}